buildscript {
    repositories {
        google()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.6.0'
        classpath "de.mannodermaus.gradle.plugins:android-junit5:1.11.0.0"
        classpath "com.google.dagger:hilt-android-gradle-plugin:2.52"
    }
}

apply plugin: 'com.android.application'
apply plugin: 'de.mannodermaus.android-junit5'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'

android {
    compileSdk 34

    defaultConfig {
        testInstrumentationRunnerArguments runnerBuilder: 'de.mannodermaus.junit5.AndroidJUnit5Builder'
        testInstrumentationRunnerArguments
        applicationId "com.example.myapplication"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // 2) Connect JUnit 5 to the runner
    }


    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    buildFeatures {
        viewBinding true
    }
    lint {
        abortOnError false
        disable 'UnsafeExperimentalUsageError', 'UnsafeExperimentalUsageWarning'
        explainIssues true
        htmlOutput file('build/reports/lint/report.html')
        showAll true
        warningsAsErrors false
        xmlOutput file('build/reports/lint/report.xml')
    }
    namespace 'com.example.myapplication'
}

dependencies {
    implementation 'androidx.test:monitor:1.7.2'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment:2.7.7'
    implementation 'androidx.navigation:navigation-ui:2.7.7'
    implementation 'androidx.test:core:1.6.1'

    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation "org.mockito:mockito-core:5.13.0"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.11.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.11.0"

    // 4) Jupiter API & Test Runner, if you don't have it already
    androidTestImplementation("androidx.test:runner:1.6.2")
    androidTestImplementation("org.junit.jupiter:junit-jupiter-api:5.11.0")

    // 5) The instrumentation test companion libraries
    androidTestImplementation "org.mockito:mockito-core:5.13.0"
    androidTestImplementation("de.mannodermaus.junit5:android-test-core:1.5.0")
    androidTestRuntimeOnly("de.mannodermaus.junit5:android-test-runner:1.5.0")
    androidTestRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.11.0")

    // https://stackoverflow.com/a/75298544
    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:2.0.20") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:2.0.20") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }
}

jacoco {
    toolVersion = '0.8.12'
}

checkstyle {
    showViolations = true
    ignoreFailures = false
    toolVersion = "10.18.1"
}