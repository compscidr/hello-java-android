buildscript {
    repositories {
        google()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.3'
        classpath "de.mannodermaus.gradle.plugins:android-junit5:1.8.2.0"
        classpath "com.google.dagger:hilt-android-gradle-plugin:2.41"
        classpath "com.hiya:jacoco-android:0.2"
    }
}

apply plugin: 'com.android.application'
apply plugin: 'de.mannodermaus.android-junit5'
apply plugin: 'jacoco'
apply plugin: 'com.hiya.jacoco-android'

android {
    compileSdk 31

    defaultConfig {
        testInstrumentationRunnerArguments
        applicationId "com.example.myapplication"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // 2) Connect JUnit 5 to the runner
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"
    }

    lintOptions {
        abortOnError false
        warningsAsErrors false
        showAll true
        explainIssues true
        xmlOutput file("build/reports/lint/report.xml")
        htmlOutput file("build/reports/lint/report.html")
        disable "UnsafeExperimentalUsageError",
                "UnsafeExperimentalUsageWarning"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation 'androidx.test:monitor:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.4.2'
    implementation 'androidx.navigation:navigation-ui:2.4.2'
    implementation 'androidx.test:core:1.4.0'

    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation "org.mockito:mockito-core:4.5.1"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.2"

    // 4) Jupiter API & Test Runner, if you don't have it already
    androidTestImplementation("androidx.test:runner:1.4.0")
    androidTestImplementation("org.junit.jupiter:junit-jupiter-api:5.8.2")

    // 5) The instrumentation test companion libraries
    androidTestImplementation "org.mockito:mockito-core:4.5.1"
    androidTestImplementation("de.mannodermaus.junit5:android-test-core:1.3.0")
    androidTestRuntimeOnly("de.mannodermaus.junit5:android-test-runner:1.3.0")
    androidTestRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.8.2")
}

jacoco {
    toolVersion = '0.8.7'
}

apply from: '../checkstyle.gradle'